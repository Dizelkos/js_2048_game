{"version":3,"sources":["scripts/main.js"],"names":["buttonStart","document","querySelector","tableField","scoreGame","messageStart","messageLose","messageWin","score","rows","columns","board","gameStart","classList","replace","innerText","add","addRandomNumber","moveUp","merged","j","i","currentRow","renderHtml","moveDown","moveLeft","currentCol","moveRight","currentCell","cells","value","className","remove","isGameOver","hasEmptyCell","some","row","cell","found","num","Math","random","r","floor","c","isNextSame","isBelowSame","addEventListener","window","e","contains","preventDefault","key"],"mappings":"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","file":"main.5e0fc1a5.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst buttonStart = document.querySelector('.start');\nconst tableField = document.querySelector('tbody');\nconst scoreGame = document.querySelector('.game_score');\n\nconst messageStart = document.querySelector('.message_start');\nconst messageLose = document.querySelector('.message_lose');\nconst messageWin = document.querySelector('.message_win');\n\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbuttonStart.addEventListener('click', gameStart);\n\n// Зупуск гри\nfunction gameStart() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  score = 0;\n\n  buttonStart.classList.replace('start', 'restart');\n  buttonStart.innerText = 'Restart';\n\n  messageStart.classList.add('hidden');\n\n  addRandomNumber();\n  addRandomNumber();\n};\n\n// Переміщення вгору\nfunction moveUp() {\n  let merged = false;\n\n  for (let j = 0; j < columns; j++) {\n    for (let i = 1; i < rows; i++) {\n      if (board[i][j] !== 0) {\n        let currentRow = i;\n\n        while (currentRow > 0) {\n          if (board[currentRow - 1][j] === 0) {\n            // Пересунути елемент вгору\n            board[currentRow - 1][j] = board[currentRow][j];\n            board[currentRow][j] = 0;\n            currentRow--;\n            merged = true;\n          } else if (board[currentRow - 1][j] === board[currentRow][j]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[currentRow - 1][j] *= 2;\n            score += board[currentRow - 1][j];\n            board[currentRow][j] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Переміщення вниз\nfunction moveDown() {\n  let merged = false;\n\n  for (let j = 0; j < columns; j++) {\n    for (let i = rows - 2; i >= 0; i--) {\n      if (board[i][j] !== 0) {\n        let currentRow = i;\n\n        while (currentRow < rows - 1) {\n          if (board[currentRow + 1][j] === 0) {\n            // Пересунути елемент вниз\n            board[currentRow + 1][j] = board[currentRow][j];\n            board[currentRow][j] = 0;\n            currentRow++;\n            merged = true;\n          } else if (board[currentRow + 1][j] === board[currentRow][j]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[currentRow + 1][j] *= 2;\n            score += board[currentRow + 1][j];\n            board[currentRow][j] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Переміщення вліво\nfunction moveLeft() {\n  let merged = false;\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 1; j < columns; j++) {\n      if (board[i][j] !== 0) {\n        let currentCol = j;\n\n        while (currentCol > 0) {\n          if (board[i][currentCol - 1] === 0) {\n            // Пересунути елемент вліво\n            board[i][currentCol - 1] = board[i][currentCol];\n            board[i][currentCol] = 0;\n            currentCol--;\n            merged = true;\n          } else if (board[i][currentCol - 1] === board[i][currentCol]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[i][currentCol - 1] *= 2;\n            score += board[i][currentCol - 1];\n            board[i][currentCol] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Переміщення вправо\nfunction moveRight() {\n  let merged = false;\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = columns - 2; j >= 0; j--) {\n      if (board[i][j] !== 0) {\n        let currentCol = j;\n\n        while (currentCol < columns - 1) {\n          if (board[i][currentCol + 1] === 0) {\n            // Пересунути елемент вправо\n            board[i][currentCol + 1] = board[i][currentCol];\n            board[i][currentCol] = 0;\n            currentCol++;\n            merged = true;\n          } else if (board[i][currentCol + 1] === board[i][currentCol]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[i][currentCol + 1] *= 2;\n            score += board[i][currentCol + 1];\n            board[i][currentCol] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Обробка натискання клавіш\nwindow.addEventListener('keydown', (e) => {\n  if (!buttonStart.classList.contains('restart')) {\n    return;\n  };\n\n  e.preventDefault();\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n  }\n\n  renderHtml();\n});\n\n// Візуалізація грального поля\nfunction renderHtml() {\n  for (let i = 0; i < columns; i++) {\n    for (let j = 0; j < columns; j++) {\n      const currentCell = tableField.rows[i].cells[j];\n      const value = board[i][j];\n\n      currentCell.innerText = '';\n      currentCell.classList.value = '';\n      currentCell.className = `field_cell`;\n\n      if (value > 0) {\n        currentCell.innerText = value;\n        currentCell.classList.add(`field_cell__${value}`);\n      }\n\n      if (value === 2048) {\n        messageWin.classList.remove('hidden');\n        buttonStart.classList.replace('restart', 'start');\n        buttonStart.innerText = 'Start';\n      }\n    }\n  }\n\n  scoreGame.innerText = score;\n\n  if (isGameOver()) {\n    messageLose.classList.remove('hidden');\n  } else {\n    messageLose.classList.add('hidden');\n  }\n}\n\n// Чи є порожні комірки на гральному полі\nfunction hasEmptyCell() {\n  return board.some(row => row.some(cell => !cell));\n}\n\n// Викидання випадкового числа\nfunction addRandomNumber() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const num = Math.random() < 0.5 ? 2 : 4;\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = num;\n      found = true;\n    }\n  }\n\n  renderHtml();\n}\n\n// Кінець гри\nfunction isGameOver() {\n  if (hasEmptyCell()) {\n    return false;\n  }\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns - 1; j++) {\n      const isNextSame = board[i][j] === board[i][j + 1];\n      const isBelowSame = board[j][i] === board[j + 1][i];\n\n      if (isNextSame || isBelowSame) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"]}